<%- include ('layout/header.ejs') %>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="breadcrumb__text">
          <h4>Check Out</h4>
          <div class="breadcrumb__links">
            <a href="./index.html">Home</a>
            <a href="./shop.html">Shop</a>
            <span>Check Out</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Breadcrumb Section End -->
<!-- Checkout Section Begin -->
<section class="checkout spad">
  <div class="container">
    <div class="checkout__form">
      <form onsubmit="return postOrders()">
        <div class="row">
          <div class="col-lg-8 col-md-6">
            <h6 class="checkout__title">Delivery Address</h6>
            <div>
              <% if (defaultAddress.length) { %>
              <p><%=defaultAddress[0].name %> <br><%=defaultAddress[0].country%> <br><%=defaultAddress[0].address%> <br><%=defaultAddress[0].city%> <br><%=defaultAddress[0].state%> <br><%=defaultAddress[0].postcode%> <br><%=defaultAddress[0].phone%>
                <hr>
              </p>

              <% } %>


            </div>
            <button type="button" class="btn btn-link font-weight-bold" data-toggle="modal" data-target="#exampleModal">
              Add Address
            </button>

            <button type="button" class="btn btn-link font-weight-bold" data-toggle="modal" data-target="#exampleModal2">
              View Address
            </button>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="checkout__order">
              .<div class="input-group">
                <input class="form-control" type="text" name="code" id="coupon" placeholder="Coupon code" aria-label="Recipient's " aria-describedby="my-addon">
                <div class="input-group-append">
                  <span class="input-group-text" id="my-addon" onclick="couponCheck('<%=subtotal %>')">Apply</span>
                </div>
              </div>
              <span id="couponid" class="text-success"></span>
              <span id="couponerrid" class="text-danger"></span>
            </div>
            <div class="checkout__order">
              <h4 class="order__title">Your order</h4>
              <div class="checkout__order__products">
                Product <span>Total</span>
              </div>
              <ul class="checkout__total__products">
                <% for( let i = 0; i < products.length; i++ ) { %>

                <li><%=products[i].products.productname %> <span><%=products[i].total %> </span></li>
                <% } %>

              </ul>
              <ul class="checkout__total__all">
                <li>Subtotal <span><%=subtotal %> </span></li>
                <li>Total <span id="grandtotal"><%=subtotal%></span></li>
              </ul>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="exampleRadios1" value="COD">
                <label class="form-check-label" for="exampleRadios1">
                  Cash on Delivery
                </label>
              </div>
              <!-- <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="exampleRadios2" value="Paypal">
                <label class="form-check-label" for="exampleRadios2">
                  Paypal
                </label>
              </div> -->
              <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="exampleRadios3" value="Razorpay">
                <label class="form-check-label" for="exampleRadios3">
                  Razorpay
                </label>
              </div>
              <div class="form-check">
                <% if (wallet) { %>
                <input class="form-check-input" type="radio" name="payment" id="exampleRadios4" value="Wallet">
                <label class="form-check-label" for="exampleRadios4">
                  wallet(<%=wallet.walletBalance%>)
                </label>
                <% } %>
                <p id="msg" class="text-danger"></p>
              </div>
              <button type="submit" class="site-btn">PLACE ORDER</button>
            </div>
          </div>

        </div>
      </form>
    </div>
  </div>
</section>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="col-md-4 ml-auto">

    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">ADD ADDRESS</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>



        <div class="modal-body">


          <div class="container">
            <form onsubmit="validate()">
              <div class="row">
                <div class="row">
                  <div class="checkout__input">
                    <p>Name<span>*</span></p>
                    <input type="text" name="name" id="name" onkeyup="nullName()" />
                    <p class="text-danger" id="nameerr"></p>
                  </div>
                </div>
                <div class="checkout__input">
                  <p>Country<span>*</span></p>
                  <input type="text" name="country" id="country" onkeyup="nullCountry()" />
                  <p class="text-danger" id="countryerr"></p>

                </div>
                <div class="checkout__input">
                  <p>Address<span>*</span></p>
                  <input type="text" placeholder=" Address" name="address" id="add" onkeyup="nullAdd()" />
                  <p class="text-danger" id="adderr"></p>

                </div>
                <div class="checkout__input">
                  <p>Town/City<span>*</span></p>
                  <input type="text" name="city" id="city" onkeyup="nullCity()" />
                  <p class="text-danger" id="cityerr"></p>

                </div>
                <div class="checkout__input">
                  <p>Country/State<span>*</span></p>
                  <input type="text" name="state" id="state" onkeyup="nullState()" />
                  <p class="text-danger" id="stateerr"></p>

                </div>
                <div class="checkout__input">
                  <p>Postcode / ZIP<span>*</span></p>
                  <input type="text" name="postcode" id="pin" onkeyup="nullPin()" onkeypress="return onlyNumberKey(event)" maxlength="06" />
                  <p class="text-danger" id="pinerr"></p>

                </div>
                <div class="row">
                  <div class="checkout__input">
                    <p>Phone<span>*</span></p>
                    <input type="text" name="phone" id="phone" onkeyup="nullPhn()" maxlength="10" onkeypress="return onlyNumberKey(event)" />
                    <p class="text-danger" id="phoneerr"></p>

                  </div>
                </div>
              </div>
          </div>
          <button type="submit" class="btn btn-primary">Save</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!--  View Address Modal -->
<div class="modal fade" id="exampleModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="col-md-4 ml-auto">

    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel"> ADDRESSES</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">

          <% for( let i = 0; i < address.length; i++ ) { %>
          <div class="float-right">

            <div class="p-2" data-toggle="modal" aria-label="Close" style="cursor: pointer;" data-target="#editmodal<%= address[i]._id%>">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
              </svg>
            </div>
            <div class="p-2" onclick="deleteAddress('<%= address[i]._id%>')" style="cursor:pointer">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z" />
              </svg>
            </div>

          </div>
          <p><%= address[i].name %><br> <%= address[i].country %> <br><%=address[i].address %> <br> <%=address[i].city %> <br><%=address[i].state %> <br> <%=address[i].postcode %> <br> <%=address[i].phone %> </p>
          <% if (address[i].default == true ) { %>
          <button class="btn btn-warning" onclick="selectAddress('<%=address[i]._id%>')">selected</button>
          <hr>
          <% } else { %>
          <button class="btn btn-primary" onclick="selectAddress('<%=address[i]._id%>')">select</button>
          <hr>

          <% } %>

          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>


<!-- edit modal -->
<% for( let i = 0; i < address.length; i++ ) { %>

<div class="modal fade" id="editmodal<%= address[i]._id%>" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="col-md-4 ml-auto">

    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">EDIT ADDRESS</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="container">
            <form action="/editaddress/<%= address[i]._id%>" id="editForm" method="post" onsubmit="return validateEdit()">
              <div class="row">
                <div class="row">
                  <div class="checkout__input">
                    <p>Name<span>*</span></p>
                    <input type="text" name="name" id="nameid" value="<%= address[i].name%>" />
                    <p id="nameerror" class="text-danger"></p>
                  </div>
                </div>
                <div class="checkout__input">
                  <p>Country<span>*</span></p>
                  <input type="text" name="country" id="countryid" value="<%= address[i].country%>" />
                  <p id="countryerror" class="text-danger"></p>

                </div>
                <div class="checkout__input">
                  <p>Address<span>*</span></p>
                  <input type="text" value="<%= address[i].address%>" id="addid" name="address" />
                  <p id="adderror" class="text-danger"></p>
                </div>
                <div class="checkout__input">
                  <p>Town/City<span>*</span></p>
                  <input type="text" name="city" id="cityid" value="<%= address[i].city%>" />
                  <p id="cityerror" class="text-danger"></p>
                </div>
                <div class="checkout__input">
                  <p>Country/State<span>*</span></p>
                  <input type="text" name="state" id="stateid" value="<%= address[i].state%>" />
                  <p id="stateerror" class="text-danger"></p>
                </div>
                <div class="checkout__input">
                  <p>Postcode / ZIP<span>*</span></p>
                  <input type="text" name="postcode" id="pinid" value="<%= address[i].postcode%>" />
                  <p id="pinerror" class="text-danger"></p>
                </div>
                <div class="row">
                  <div class="checkout__input">
                    <p>Phone<span>*</span></p>
                    <input type="text" name="phone" id="phoneid" value="<%= address[i].phone%>" />
                    <p id="phoneerror" class="text-danger"></p>
                  </div>
                </div>
              </div>
          </div>
          <button type="submit" class="btn btn-primary">Save</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
<% } %>

<!-- Checkout Section End --> -->
<script>
  //coupon
  function couponCheck(id) {
    const total = id;
    const code = document.getElementById('coupon').value
    axios.get('/couponcheck', {
      params: {
        code,
        total
      }
    }).then((e) => {
      if (e.data.status) {
        alert(e.data.status)
        alert(e.data.grandtotal)
        document.getElementById('couponid').innerHTML = e.data.message;
        document.getElementById('grandtotal').innerHTML = e.data.grandtotal;
      } else {
        alert(e.data.status)
        alert(e.data.message)
        document.getElementById('couponerrid').innerHTML = e.data.message;

      }
    })
  }

  function postOrders() {
    event.preventDefault()
    let result = document.getElementsByName('payment')
    const newTotal = document.getElementById('grandtotal').innerHTML;
    const code = document.getElementById('coupon').value;
    let payment
    if (result[0].checked || result[1].checked || result[2].checked || result[3].checked) {
      for (i = 0; i < result.length; i++) {
        if (result[i].checked) payment = result[i].value;
      }
    } else {
      document.getElementById('msg').innerHTML = "Please select payment method"
      return false;
    }
    axios.post('/postorders', {
      payment,
      newTotal,
      code
    }).then((e) => {
      if (e.data) {
        if (e.data.response === "success") {
          location.href = "/orderSuccess"
        }
        const wallet = e.data.wallet
        const orders = e.data.orders;


        // const user=
        const ID = orders.id;
        const price = orders.amount;
        const key = "rzp_test_R1QSm7BuywsRkf";
        var options = {
          "key": key, // Enter the Key ID generated from the Dashboard
          "amount": price, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
          "currency": "INR",
          "name": "Acme Corp",
          "description": "Test Transaction",
          "image": "https://example.com/your_logo",
          "order_id": ID, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
          "handler": function(response) {
            // alert(response.razorpay_payment_id);
            // alert(response.razorpay_order_id);
            // alert(response.razorpay_signature)
            veryfyPayment(response, orders, wallet)
          },
          "prefill": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9999999999"
          },
          "notes": {
            "address": "Razorpay Corporate Office"
          },
          "theme": {
            "color": "#3399cc"
          }
        };
        var rzp1 = new Razorpay(options);
        rzp1.on('payment.failed', function(response) {
          // alert(response.error.code);
          // alert(response.error.description);
          // alert(response.error.source);
          // alert(response.error.step);
          // alert(response.error.reason);
          // alert(response.error.metadata.order_id);
          // alert(response.error.metadata.payment_id);
        });
        rzp1.open();
      }
    })
  }

  function veryfyPayment(paymentStatus, orders, wallet) {
    axios.post('/paymentverify', {
      paymentStatus,
      orders,
      wallet
    }).then((e) => {
      location.href = "/orderSuccess"
    })
  }


  function selectAddress(id) {
    axios.get('/selectaddress', {
      params: {
        id: id
      }
    }).then((e) => {
      if (e.data.session === "login") location.href = "/login"
      else
        location.href = "/checkout"

    })
  }

  function deleteAddress(id) {
    Swal.fire({
      title: "Are you sure?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        axios.delete('/deleteaddress', {
          data: {
            id
          }
        }).then((e) => {
          if (e.data.session === "login") location.href = "/login"
          else
            location.href = "/checkout"
        })

      }
    })
  }


  async function validate() {
    event.preventDefault()
    const name = document.getElementById('name').value;
    const country = document.getElementById('country').value;
    const add = document.getElementById('add').value;
    const city = document.getElementById('city').value;
    const pin = document.getElementById('pin').value;
    const state = document.getElementById('state').value;
    const phone = document.getElementById('phone').value;
    let Return = true;

    if (name === "") {
      document.getElementById('nameerr').innerHTML = "Enter your name"
      Return = false;
    }
    if (country === "") {
      document.getElementById('countryerr').innerHTML = "Enter your country"
      Return = false;
    }
    if (add === "") {
      document.getElementById('adderr').innerHTML = "Enter your address"
      Return = false;
    }
    if (city === "") {
      document.getElementById('cityerr').innerHTML = "Enter your city"
      Return = false;
    }
    if (pin === "") {
      document.getElementById('pinerr').innerHTML = "Enter your postcode"
      Return = false;
    }
    if (state === "") {
      document.getElementById('stateerr').innerHTML = "Enter your State"
      Return = false;
    }
    if (phone === "") {
      document.getElementById('phoneerr').innerHTML = "Enter your number"
      Return = false;
    }
    if (Return === true) {

      const frm = new FormData(event.target)
      const form = await Object.fromEntries(frm)
      console.log(form)
      axios.post('/addaddress', form).then(() => {
        location.href = "/checkout"
      })

    }
  }

  async function validateEdit() {
    
    const name = document.getElementById('nameid').value;
    const country = document.getElementById('countryid').value;
    const add = document.getElementById('addid').value;
    const city = document.getElementById('cityid').value;
    const pin = document.getElementById('pinid').value;
    const state = document.getElementById('stateid').value;
    const phone = document.getElementById('phoneid').value;
    let Return = true;

    if (name === "") {
      document.getElementById('nameerror').innerHTML = "Enter your name"
      Return = false;
    }
    if (country === "") {
      document.getElementById('countryerror').innerHTML = "Enter your country"
      Return = false;
    }
    if (add === "") {
      document.getElementById('adderror').innerHTML = "Enter your address"
      Return = false;
    }
    if (city === "") {
      document.getElementById('cityerror').innerHTML = "Enter your city"
      Return = false;
    }
    if (pin === "") {
      document.getElementById('pinerror').innerHTML = "Enter your postcode"
      Return = false;
    }
    if (state === "") {
      document.getElementById('stateerror').innerHTML = "Enter your State"
      Return = false;
    }
    if (phone === "") {
      document.getElementById('phoneerror').innerHTML = "Enter your number"
      Return = false;
    }
    if (!Return) {
      event.preventDefault()
    }
  }

  function nullName() {
    document.getElementById('nameerror').innerHTML = ""

  }

  function nullCountry() {
    document.getElementById('countryerror').innerHTML = ""

  }

  function nullAdd() {
    document.getElementById('adderror').innerHTML = ""

  }

  function nullCity() {
    document.getElementById('cityerror').innerHTML = ""

  }

  function nullState() {
    document.getElementById('stateerror').innerHTML = ""

  }

  function nullPin() {
    document.getElementById('pinerror').innerHTML = ""
  }

  function nullPhn() {
    document.getElementById('phnerror').innerHTML = ""
  }


  function onlyNumberKey(evt) {
    // Only ASCII character in that range allowed
    var ASCIICode = evt.which ? evt.which : evt.keyCode;
    if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) return false;
    return true;
  }
</script>


<%- include ('layout/footer.ejs') %>

<!-- Button trigger modal -->